>      n1 n2 -- flag           test n1>n2, signed
CONSTANT   n --           define a Forth constant
UM*    u1 u2 -- ud       unsigned 16x16->32 mult.
UM/MOD ud u1 -- u2 u3     unsigned 32/16->16 div.
VARIABLE   --             define a Forth variable

               ANS Forth Extensions

<>     x1 x2 -- flag               test not equal 
CMOVE> c-addr1 c-addr2 u --         move from top
KEY?   -- flag        return true if char waiting
M+     d1 n -- d2            add single to double
NIP    x1 x2 -- x2              per stack diagram
TUCK   x1 x2 -- x2 x1 x2        per stack diagram
U>     u1 u2 -- flag         test u1>u2, unsigned 

               Private Extensions

><     x1 -- x2                        swap bytes 
BDOS   DE C -- A                   call CP/M BDOS
PC!    c p-addr --            output char to port
PC@    p-addr -- c           input char from port
SCAN   c-addr1 u1 c -- c-addr2 u2
                               find matching char
SKIP   c-addr1 u1 c -- c-addr2 u2
                              skip matching chars
S=     c-addr1 c-addr2 u -- n      string compare
               n<0: s1<s2, n=0: s1=s2, n>0: s1>s2
USER   n --              define user variable 'n'
